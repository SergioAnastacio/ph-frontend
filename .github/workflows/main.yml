name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  HotCache:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node.js modules
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
    
  Lint-Code:
    runs-on: ubuntu-latest
    needs: HotCache
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore Node.js modules cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run formatter
        run: npm run format

      - name: Run linter
        run: npm run lint

  Build-App:
    runs-on: ubuntu-latest
    needs: Lint-Code
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore Node.js modules cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build App
        run: npm run build

  Build-Push-Image:
    runs-on: ubuntu-latest
    needs: Build-App
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Install jq
        run: sudo apt-get install -y jq
      
      - name: Extract version from package.json
        id: get_version
        run: |
          VERSION=$(jq -r .version < package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/sergioanastacio/ph-frontend:latest
            ghcr.io/sergioanastacio/ph-frontend:${{ env.VERSION }}
            ghcr.io/sergioanastacio/ph-frontend:${{ env.VERSION }}-${{ github.sha }}

  UpdateCDmanifest:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: Build-Push-Image
    steps:
      - name: Checkout other repository
        uses: actions/checkout@v4
        with:
          repository: ${{github.repository_owner}}/cmcio-argocd
          token: ${{ secrets.PAT }}
          path: other-repo

      - name: Modify deployment file
        run: |
          cd other-repo
          sed -i "s|image: ghcr.io/sergioanastacio/ph-frontend:.*|image: ghcr.io/sergioanastacio/ph-frontend:${{ needs.Build-Push-Image.outputs.version }}|g" dev/frontend/ph/ph-frontend-deployment.yaml

      - name: Commit and push changes
        run: |
          cd other-repo
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add dev/frontend/ph/ph-frontend-deployment.yaml
          git commit -m "Modificación automática desde workflow"
          git push origin main